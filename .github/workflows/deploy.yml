name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    # 1. Checkout code
    - name: Checkout code
      uses: actions/checkout@v3
      
    # 2. Setup variables
    - name: Setup variables
      run: |
        echo "VERSION=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
        echo "üïê Version: $VERSION"
    
    # 3. Build Docker image
    - name: Build Docker image
      run: |
        docker build -t skpy1/ci-cd-app:latest -t skpy1/ci-cd-app:${{ env.VERSION }} .
        echo "‚úÖ Docker image built"
    
    # 4. Login to Docker Hub
    - name: Login to Docker Hub
      run: |
        echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "skpy1" --password-stdin
        echo "‚úÖ Logged in to Docker Hub"
    
    # 5. Push to Docker Hub
    - name: Push to Docker Hub
      run: |
        docker push skpy1/ci-cd-app:latest
        docker push skpy1/ci-cd-app:${{ env.VERSION }}
        echo "‚úÖ Images pushed to Docker Hub"
    
    # 6. Generate changelog
    - name: Generate changelog
      run: |
        echo "# Changelog" > CHANGELOG.md
        echo "## Version ${{ env.VERSION }}" >> CHANGELOG.md
        echo "- Build date: $(date)" >> CHANGELOG.md
        echo "- Commit: $GITHUB_SHA" >> CHANGELOG.md
        echo "‚úÖ Changelog generated"
    
    # 7. Simulated Telegram notification
    - name: Telegram Notification
      run: |
        echo "üì± Telegram notification simulated"
        echo "Bot Token: ${{ secrets.TELEGRAM_BOT_TOKEN != '' && '‚úÖ SET' || '‚ùå NOT SET' }}"
        echo "Chat ID: ${{ secrets.TELEGRAM_CHAT_ID != '' && '‚úÖ SET' || '‚ùå NOT SET' }}"
        echo "Message: Deployment v${{ env.VERSION }} completed!"
    
    # 8. Create GitHub Release (FIXED)
    - name: Create GitHub Release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        automatic_release_tag: "v${{ env.VERSION }}"
        prerelease: false
        title: "Release v${{ env.VERSION }}"
        body: |
          Automated CI/CD Release
          - Version: ${{ env.VERSION }}
          - Docker: skpy1/ci-cd-app:${{ env.VERSION }}
        files: |
          CHANGELOG.md

    # 9. Success message
    - name: Success
      run: |
        echo "üéâ CI/CD Pipeline completed successfully!"
        echo "üê≥ Docker: skpy1/ci-cd-app:${{ env.VERSION }}"
        echo "üè∑Ô∏è Release: v${{ env.VERSION }}"
